type Transaction {
    id: ID!
    description: String
    createAt: String
    amount: Float
    currency: CurrencyEnum
    transactionType: TransactionTypeEnum
    status: TransactionStatusEnum
    booking: Booking
    paymentMethod: PaymentMethod
}

type Setting{
    id: ID!
    key: String
    value: String
}

type ListTransaction{
    list: [Transaction]
    paging: Paging
}

input UpdateSettingInput {
    id: ID!
    key: String!
    value: String!
}

input TransactionFilter {
    startDate: String
    endDate: String
    transactionType: String
    page: Int
    pageSize: Int
}

extend type Query {
    getListTransactionForCustomer(customerId: ID, filter: TransactionFilter): ListTransaction
    getListTransactionForReader(readerId: ID, filter: TransactionFilter): ListTransaction
    getTransactionById(id: ID!): Transaction
    getAllSettings: [Setting]
}

extend type Mutation {
    createSetting(key: String!, value: String!): Setting
    updateSetting(setting: UpdateSettingInput!): Setting
}