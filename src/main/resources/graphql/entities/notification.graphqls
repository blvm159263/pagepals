enum NotificationRole {
    READER
    CUSTOMER
}

type Notification {
    id: ID!
    content: String
    title: String
    notificationRole: String
    status: String
    isRead: Boolean
    createdAt: String
    updatedAt: String
    account: Account
}

type ListNotification {
    total: Int
    pagination: Paging
    list: [Notification]
}

input NotificationInput {
    content: String
    title: String
    accountId: ID
    notificationRole: NotificationRole
}

extend type Query {
    getNotificationById(id: ID!): Notification
    getAllNotifications(page: Int, pageSize: Int, sort: String): ListNotification
    getAllNotificationsByAccountId(accountId: ID, page: Int, pageSize: Int, sort: String, notificationRole: NotificationRole): ListNotification
}

extend type Mutation {
    createNotification(notification: NotificationInput): Notification
    readNotification(id: ID!): Notification
    readAllNotifications(accountId: ID): [Notification]
}