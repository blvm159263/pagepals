type AnalyticAdmin{
    totalCustomers: Int
    totalReaders: Int
    totalService: Int
    totalBookings: Int
    bookingStatics: BookingStatics
    incomeByToken: IncomeByToken
    incomeByRevenueShare: IncomeByRevenueShare
    circulatingToken: CirculatingToken
    freeStorage: FreeStorage
    cloudStorage: CloudStorage
    topReaders: [TopReader]
    topServices: [TopService]
}

type BookingStatics{
    percentageOfDone: Int
    months: [String]
    seriesData: [StateStatic]
}

type StateStatic{
    state: String
    data: [Int]
}

type IncomeByToken{
    totalTokenSale: Int
    totalIncome: Float
    percentageIncrease: Float
    seriesData: [IncomeByTokenData]
}

type IncomeByTokenData{
    token: Int
    income: Float
    date: String
}

type CirculatingToken{
    totalCirculating: Int
    percentageIncrease: Float
    seriesData: [CirculatingTokenData]
}

type CirculatingTokenData{
    token: Int
    date: String
}

type IncomeByRevenueShare{
    totalIncome: Float
    percentageIncrease: Float
    seriesData: [IncomeByRevenueShareData]
}

type IncomeByRevenueShareData{
    income: Float
    date: String
}

type FreeStorage{
    totalStorage: String
    usedStorage: String
}

type CloudStorage{
    totalStorage: String
    usedStorage: String
}

type TopReader{
    reader: Reader
    totalIncome: Float
}

type TopService{
    service: Service
    totalBooking: Int
}

extend type Query{
    getAnalyticAdmin(startDate: String, endDate: String): AnalyticAdmin
}








